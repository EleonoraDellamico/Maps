{"version":3,"sources":["hooks/useMapBox.js","pages/MapPage.js","MapsApp.js","index.js"],"names":["mapboxgl","accessToken","useMapBox","firstSpot","mapDiv","useRef","setRef","useCallback","node","current","point","mapa","useState","coords","setCoords","addMarker","ev","lngLat","lng","lat","marker","Marker","id","v4","setLngLat","addTo","setDraggable","on","target","getLngLat","useEffect","map","Map","container","style","center","zoom","getCenter","console","log","toFixed","getZoom","MapPage","className","ref","MapsApp","ReactDOM","render","document","getElementById"],"mappings":"0MAIAA,IAASC,YAAc,6FAChB,IA4FQC,EA5FU,SAACC,GAEtB,IAAMC,EAASC,mBACTC,EAASC,uBAAc,SAACC,GAC1BJ,EAAOK,QAAQD,IACjB,IAGIE,EAAQL,iBAAO,IAKfM,EAAON,mBAbuB,EAcVO,mBAAST,GAdC,mBAc9BU,EAd8B,KActBC,EAdsB,KAiB7BC,EAAYR,uBAAa,SAACS,GAAM,IAAD,EACbA,EAAGC,OAAfC,EADyB,EACzBA,IAAKC,EADoB,EACpBA,IACPC,EAAS,IAAIpB,IAASqB,OAC5BD,EAAOE,GAAKC,cAEZH,EACAI,UAAW,CAACN,EAAIC,IAChBM,MAAOd,EAAKF,SACZiB,cAAa,GAEhBhB,EAAMD,QAASW,EAAOE,IAAMF,EAG5BA,EAAOO,GAAG,QAAQ,YAAa,IAAXC,EAAU,EAAVA,OAAU,GAClBA,EAAJN,GACYM,EAAOC,aAFG,EAEtBX,IAFsB,EAEjBC,SAGZ,IAgDH,OA9CAW,qBAAU,WACN,IAAMC,EAAM,IAAI/B,IAASgC,IAAI,CAC7BC,UAAW7B,EAAOK,QAClByB,MAAO,qCACPC,OAAQ,CAAChC,EAAUe,IAAKf,EAAUgB,KAClCiB,KAAMjC,EAAUiC,OAEpBzB,EAAKF,QAASsB,IACZ,CAAC5B,IAGC2B,qBAAW,WAAK,IAAD,EACf,UAAAnB,EAAKF,eAAL,SAAckB,GAAG,QAAO,WAAK,IAAD,EACNhB,EAAKF,QAAQ4B,YAAzBnB,EADkB,EAClBA,IAAKC,EADa,EACbA,IACXmB,QAAQC,IAAIrB,EAAIC,KAChBL,EAAU,CACNI,IAAKA,EAAIsB,QAAQ,GACjBrB,IAAKA,EAAIqB,QAAQ,GACjBJ,KAAKzB,EAAKF,QAAQgC,UAAUD,QAAQ,UAI9C,IAGDV,qBAAU,WAAO,IAAD,EACZ,UAAAnB,EAAKF,eAAL,SAAckB,GAAG,SAAS,SAACX,GAExBD,EAAUC,QAaf,CAACD,IAKE,CACFA,YACAF,SACAH,QACAJ,WCxFFH,EAAY,CACde,IAAK,SACLC,KAAM,OACNiB,KAAM,OA8CKM,EA5CQ,WAAO,IAAD,EAEDxC,EAAWC,GAA5BU,EAFkB,EAElBA,OAAQP,EAFU,EAEVA,OA4Bf,OACI,qCACA,sBAAKqC,UAAY,OAAjB,iBACS9B,EAAOK,IADhB,UAC4BL,EAAOM,IADnC,WACgDN,EAAOuB,QAEvD,qBACEQ,IAAMtC,EACNqC,UAAU,qBCnCLE,EARQ,WACnB,OACI,8BACI,cAAC,EAAD,O,MCAZC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.c74bdf05.chunk.js","sourcesContent":["import { useCallback, useEffect, useRef, useState}from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport {v4} from \"uuid\";\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ2l1bGlvNzgiLCJhIjoiY2tqaGNneGtiOTk1MzJ2cWpyemljZHQzcSJ9.HnFfA7OBcnwbaFJq-vB-5w';\nexport const useMapBox = (firstSpot ) =>{\n    //REFER TO DIVMAP\n    const mapDiv = useRef();\n    const setRef = useCallback ( (node)=> {\n        mapDiv.current=node;\n    },[] )\n\n    //MARKER'S REFERENCE\n    const point = useRef({});\n    \n    \n    \n    //MAP AND COORDS\n    const mapa = useRef();\n    const[coords, setCoords]= useState(firstSpot);\n\n    //ADD MARKERS\n     const addMarker = useCallback ((ev)=>{\n         const { lng, lat }= ev.lngLat;\n         const marker = new mapboxgl.Marker();\n         marker.id = v4 (); // TODO si el marcador ya tiene ID\n      \n         marker\n        .setLngLat ([lng,lat])\n        .addTo (mapa.current)\n        .setDraggable(true);\n    \n      point.current[ marker.id] = marker;\n    \n      //LISTENING  the movement\n      marker.on(\"drag\", ({target})=>{\n       const {id}=target;\n       const {lng, lat }= target.getLngLat();\n      });\n\n     },[]);\n   \n    useEffect(()=>{\n        const map = new mapboxgl.Map({\n        container: mapDiv.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [firstSpot.lng, firstSpot.lat],\n        zoom: firstSpot.zoom\n});\n    mapa.current= map;\n    },[firstSpot ]);\n\n    // MOVING MAP\n        useEffect (()=>{\n        mapa.current?.on(\"move\",()=>{\n            const{lng, lat} = mapa.current.getCenter();\n            console.log(lng.lat);\n            setCoords({\n                lng: lng.toFixed(4),\n                lat: lat.toFixed(4),\n                zoom:mapa.current.getZoom().toFixed(2)\n            })\n        });\n\n    },[]);\n    \n    // ADD PIN WHEN WE USE CLICK\n     useEffect(() => {\n         mapa.current?.on(\"click\", (ev)=> {\n\n            addMarker(ev);\n             \n            /* const { lng, lat }= ev.lngLat; */\n            /* const marker = new mapboxgl.Marker(); */\n            /* marker.id = v4 (); // TODO si el marcador ya tiene ID */\n            /* marker */\n            /*       .setLngLat ([lng,lat]) */\n            /*       .addTo (mapa.current) */\n            /*       .setDraggable(true); */\n            /* point.current[ marker.id] = marker; */\n\n         })\n\n     },[addMarker]);\n\n\n\n\n    return{\n        addMarker,\n        coords,\n        point,\n        setRef\n\n    }\n\n}\nexport default useMapBox;","\nimport useMapBox from \"../hooks/useMapBox\";\n\n\nconst firstSpot = {\n    lng: 144.8794,\n    lat: -37.8020,\n    zoom: 11.52\n}\nexport const MapPage = () => {\n    \n    const {coords, setRef}= useMapBox (firstSpot );\n    //REFACTORING USING HOOKS\n    /* const mapDiv = useRef();\n    const mapa = useRef();\n     const[coords, setCoords]= useState(firstSpot);\n   \n    useEffect(()=>{\n        const map = new mapboxgl.Map({\n        container: mapDiv.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [firstSpot.lng, firstSpot.lat],\n        zoom: firstSpot.zoom\n});\n    mapa.current= map;\n    },[]); */\n//MOVING MAPA\n/*     useEffect (()=>{\n        mapa.current?.on(\"move\",()=>{\n            console.log(\"hey\");\n            const{lng, lat} = mapa.current.getCenter();\n            console.log(lng.lat);\n            setCoords({\n                lng: lng.toFixed(4),\n                lat: lat.toFixed(4),\n                zoom:mapa.current.getZoom().toFixed(2)\n            })\n        });\n    },[]); */\n    return (\n        <>\n        <div className = \"info\">\n            lng:{coords.lng} | lat:{coords.lat} | zoom {coords.zoom}\n        </div>\n        <div\n          ref= {setRef}\n          className=\"mapContainer\"\n        />\n            \n        </>\n    )\n\n}\nexport default MapPage; ","import React from \"react\"; \nimport MapPage from \"./pages/MapPage\"\n\nexport const MapsApp = () => {\n    return (\n        <div>\n            <MapPage/>\n        </div>\n    )\n\n}\nexport default MapsApp; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MapsApp from './MapsApp';\nimport \"./index.css\";\n\n\nReactDOM.render(\n\n    <MapsApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}